# Code generated by font_to_py.py.
# Font: DroidSans.ttf Char set: ,./0123456789hkmpr
# Cmd: ../micropython-font-to-py/font_to_py.py /usr/share/fonts/google-droid/DroidSans.ttf -x 20 droidsans20.py -c 0123456789,.kmhrpm/
version = '0.33'

def height():
    return 20

def baseline():
    return 15

def max_width():
    return 19

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 44

def max_ch():
    return 114

_font =\
b'\x09\x00\x00\x00\x7c\x00\xff\x00\x03\x00\x03\x00\x03\x00\x06\x00'\
b'\x0c\x00\x18\x00\x18\x00\x00\x00\x00\x00\x18\x00\x18\x00\x18\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x60\x60\x40\xc0\xc0\x00\x00'\
b'\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x60\x60'\
b'\x60\x00\x00\x00\x00\x00\x07\x00\x00\x06\x04\x0c\x0c\x08\x18\x10'\
b'\x30\x30\x20\x60\x40\xc0\xc0\x00\x00\x00\x00\x00\x0b\x00\x00\x00'\
b'\x1f\x00\x3f\x80\x31\x80\x60\xc0\x60\xc0\x60\xc0\x60\xc0\x60\xc0'\
b'\x60\xc0\x60\xc0\x60\xc0\x31\x80\x3f\x80\x1f\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x06\x00\x0e\x00\x36\x00'\
b'\x26\x00\x06\x00\x06\x00\x06\x00\x06\x00\x06\x00\x06\x00\x06\x00'\
b'\x06\x00\x06\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x0b\x00\x00\x00\x1e\x00\x7f\x00\x01\x80\x01\x80\x01\x80\x01\x80'\
b'\x03\x00\x07\x00\x06\x00\x0c\x00\x18\x00\x30\x00\x7f\xc0\x7f\xc0'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x1e\x00'\
b'\x7f\x00\x01\x80\x01\x80\x01\x80\x03\x00\x1c\x00\x1f\x00\x00\xc0'\
b'\x00\xc0\x00\xc0\x00\xc0\x7f\x80\x3f\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x0b\x00\x00\x00\x01\x80\x03\x80\x07\x80\x0d\x80'\
b'\x09\x80\x19\x80\x31\x80\x61\x80\x41\x80\xff\xe0\xff\xe0\x01\x80'\
b'\x01\x80\x01\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x00'\
b'\x00\x00\x3f\x80\x7f\x80\x60\x00\x60\x00\x60\x00\x7f\x00\x7f\x80'\
b'\x01\xc0\x00\xc0\x00\xc0\x00\xc0\x01\xc0\x7f\x80\x3e\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x07\x80\x1f\x80'\
b'\x30\x00\x30\x00\x60\x00\x6f\x00\x79\x80\x60\xc0\x60\xc0\x60\xc0'\
b'\x60\xc0\x30\xc0\x3f\x80\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x0b\x00\x00\x00\x7f\xc0\x7f\xc0\x00\xc0\x01\x80\x01\x80'\
b'\x03\x00\x03\x00\x02\x00\x06\x00\x06\x00\x0c\x00\x0c\x00\x18\x00'\
b'\x18\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00'\
b'\x1f\x00\x3f\x80\x60\xc0\x60\xc0\x20\x80\x3b\x80\x1e\x00\x3f\x00'\
b'\x31\x80\x60\xc0\x60\xc0\x60\xc0\x3f\x80\x1f\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x1e\x00\x3f\x80\x61\x80'\
b'\x60\xc0\x60\xc0\x60\xc0\x60\xc0\x33\xc0\x1e\xc0\x00\xc0\x01\x80'\
b'\x01\x80\x27\x00\x3e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x0c\x00\x60\x00\x60\x00\x60\x00\x60\x00\x6f\x00\x7b\x80\x70\xc0'\
b'\x60\xc0\x60\xc0\x60\xc0\x60\xc0\x60\xc0\x60\xc0\x60\xc0\x60\xc0'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0a\x00\x60\x00\x60\x00'\
b'\x60\x00\x60\x00\x61\xc0\x63\x80\x67\x00\x6e\x00\x6c\x00\x7c\x00'\
b'\x66\x00\x67\x00\x63\x00\x61\x80\x60\xc0\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x13\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x6f\x1e\x00\x7b\xb7\x00\x70\xc1\x80\x60\xc1\x80\x60\xc1'\
b'\x80\x60\xc1\x80\x60\xc1\x80\x60\xc1\x80\x60\xc1\x80\x60\xc1\x80'\
b'\x60\xc1\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x6f\x80\x7f\xc0'\
b'\x70\xc0\x60\x60\x60\x60\x60\x60\x60\x60\x60\x60\x70\xc0\x7d\xc0'\
b'\x6f\x80\x60\x00\x60\x00\x60\x00\x60\x00\x60\x00\x08\x00\x00\x00'\
b'\x00\x00\x6e\x7e\x70\x60\x60\x60\x60\x60\x60\x60\x60\x00\x00\x00'\
b'\x00\x00'

_index =\
b'\x00\x00\x2a\x00\x00\x00\x40\x00\x56\x00\x6c\x00\x96\x00\xc0\x00'\
b'\xea\x00\x14\x01\x3e\x01\x68\x01\x92\x01\xbc\x01\xe6\x01\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x10\x02\x00\x00\x00\x00'\
b'\x3a\x02\x00\x00\x64\x02\x00\x00\x00\x00\xa2\x02\x00\x00\xcc\x02'\
b'\xe2\x02'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 44 + 1) if oc >= 44 and oc <= 114 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 20
    return _mvfont[doff + 2:next_offs], 20, width
 
